In this case it does the module "2-matrix_divided.py"

###############################################

Import file:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

correct cases
    >>> matrix_divided([[2, 4, 6], [4, 6, 8]], 2)
    [[1.0, 2.0, 3.0], [2.0, 3.0, 4.0]]

    >>> matrix_divided([[2, 4], [8, 10]], -2)
    [[-1.0, -2.0], [-4.0, -5.0]]

    >>> matrix_divided([[1, 1], [2, 2]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]

error cases

    >>> matrix_divided([["Hello", "Universe"], [2, 2]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 1, 1], [2, 2]], 5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 8j)
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided(None, None)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats    

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], None)
    Traceback (most recent call last):
    TypeError: div must be a number
    
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], [4, 5])
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], True)
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], "3")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 4],[]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(None, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, True, 3],[4, 5, 6]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([4, 3], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

special character
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], '#')
    Traceback (most recent call last):
    TypeError: div must be a number

without divisor
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
divided by a letter
    >>> matrix_divided([[1.0, -2.4, 3.1], [4.3, -5.3, -6.2]], 'z')
    Traceback (most recent call last):
    TypeError: div must be a number